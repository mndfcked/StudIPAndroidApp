/*
 * Copyright (c) 2014 ELAN e.V.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the GNU Public License v3.0
 * which accompanies this distribution, and is available at
 * http://www.gnu.org/licenses/gpl.html
 */
import java.text.SimpleDateFormat

def versionMajor = 0 //prod
def versionMinor = 8
def versionPatch = 9
def versionBuild = 9

def versionMajorBeta = 0 //beta
def versionMinorBeta = 8
def versionPatchBeta = 9
def versionBuildBeta = 6

buildscript {

  repositories {
    maven { url 'http://download.crashlytics.com/maven' }
  }
  dependencies {
    classpath 'com.crashlytics.tools.gradle:crashlytics-gradle:1.13.1'
  }

}
apply plugin: 'com.android.application'
apply plugin: 'crashlytics'

repositories {
  maven { url 'http://download.crashlytics.com/maven' }
}

dependencies {
  compile fileTree(dir: 'libs', include: '*.jar')
  compile 'com.android.support:support-v4:20.0.0'
  compile 'com.android.support:appcompat-v7:20.0.0'
  compile 'com.fasterxml.jackson.core:jackson-databind:2.4.2'
  compile 'com.fasterxml.jackson.core:jackson-annotations:2.4.2'
  compile 'oauth.signpost:signpost-commonshttp4:1.2.1.2'
  compile 'oauth.signpost:oauth-signpost:1.2.1.2'
  compile 'oauth.signpost:signpost-core:1.2.1.2'
  compile 'com.crashlytics.android:crashlytics:1.1.13'
  compile 'com.squareup.picasso:picasso:2.2.0'
  compile 'com.squareup.okhttp:okhttp:1.6.0'
  compile 'se.emilsjolander:stickylistheaders:2.5.0'
  compile 'com.google.guava:guava:17.0'
  compile 'com.mcxiaoke.volley:library:1.0.6@aar'
}

def buildTime() {
  def df = new SimpleDateFormat("yyyy-MM-dd HH:mm")
  df.setTimeZone(TimeZone.getTimeZone("CET"))
  return df.format(new Date())
}

android {

  testBuildType "staging"

  lintOptions {
    abortOnError false
  }

  compileSdkVersion 20
  buildToolsVersion "20.0.0"

  signingConfigs {
    release
  }

  //Read signing config from release.properties in root

  if (rootProject.file("release.properties").exists()) {
    def props = new Properties()
    props.load(new FileInputStream(rootProject.file("release.properties")))

    android.signingConfigs.release.storeFile rootProject.file(props.getProperty("keyStore"))
    android.signingConfigs.release.storePassword props.getProperty("keyStorePassword")
    android.signingConfigs.release.keyAlias props.getProperty("keyAlias")
    android.signingConfigs.release.keyPassword props.getProperty("keyAliasPassword")
  }

  defaultConfig {
    minSdkVersion 10
    targetSdkVersion 20

    versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
    versionName "${versionMajor}.${versionMinor}.${versionPatch}"
    buildConfigField "String", "BUILD_TIME", "\"${buildTime()}\""
  }

  productFlavors {
    beta {
      versionCode versionMajorBeta * 10000 + versionMinorBeta * 1000 + versionPatchBeta * 100 + versionBuildBeta
      versionName "${versionMajorBeta}.${versionMinorBeta}.${versionPatchBeta}-beta"
    }

    production {
      versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
      versionName "${versionMajor}.${versionMinor}.${versionPatch}"
    }
  }

  buildTypes {

    debug {
      buildConfigField "boolean", "USE_CRASHLYTICS", "false"

      // Database name configuration
      buildConfigField "String", "DATABASE", "\"studip_debug.db\""

      // SyncHelper threshold values
      buildConfigField "int", "COURSES_SYNC_THRESHOLD", "5000"; // 1h
      buildConfigField "int", "NEWS_SYNC_THRESHOLD", "5000"; // 1min
      buildConfigField "int", "CONTACTS_SYNC_THRESHOLD", "5000"; // 1min
      ext.enableCrashlytics = false
      versionNameSuffix '-DEBUG'
      debuggable = true
    }

    release {
      buildConfigField "boolean", "USE_CRASHLYTICS", "true"

      // Database name configuration
      buildConfigField "String", "DATABASE", "\"studip_encrypted.db\""

      // SyncHelper threshold values
      buildConfigField "int", "COURSES_SYNC_THRESHOLD", "3600000"; // 1h
      buildConfigField "int", "NEWS_SYNC_THRESHOLD", "60000"; // 1min
      buildConfigField "int", "CONTACTS_SYNC_THRESHOLD", "60000"; // 1min

      ext.enableCrashlytics = true
      versionNameSuffix '-RELEASE'
      debuggable = false
      signingConfig signingConfigs.release
      runProguard = true
      proguardFile 'proguard-project.txt'
      proguardFile getDefaultProguardFile('proguard-android.txt')
    }

    staging {
      buildConfigField "boolean", "USE_CRASHLYTICS", "false"

      // Database name configuration
      buildConfigField "String", "DATABASE", "\"studip_staging.db\""

      // SyncHelper threshold values
      buildConfigField "int", "COURSES_SYNC_THRESHOLD", "3600000"; // 1h
      buildConfigField "int", "NEWS_SYNC_THRESHOLD", "60000"; // 1min
      buildConfigField "int", "CONTACTS_SYNC_THRESHOLD", "60000"; // 1min
      ext.enableCrashlytics = false
      versionNameSuffix '-STAGING'
      debuggable = false
      runProguard = false
    }

    applicationVariants.all { variant ->
      def file = variant.outputFile
      variant.outputFile = new File(file.parent, file.name.replace(".apk",
          "-" + variant.productFlavors.versionCode + "-" + variant.name + ".apk"))
    }

  }

  packagingOptions {
    exclude 'META-INF/LICENSE'
    exclude 'META-INF/NOTICE'
  }

}
